<!DOCTYPE html>
<html lang="en">
	<head>

    
		<meta charset="utf-8">
		<meta content="width=device-width, initial-scale=1.0" name="viewport">
	  
		<title>Final Project</title>
		<meta content="" name="description">
		<meta content="" name="keywords">
	  
		<!-- Favicons -->
		<link href="assets/img/favicon.png" rel="icon">
		<link href="assets/img/apple-touch-icon.png" rel="apple-touch-icon">
	  
		<!-- Google Fonts -->
		<link href="https://fonts.gstatic.com" rel="preconnect">
		<link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
	  
		<!-- Vendor CSS Files -->
		<link href="assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
		<link href="assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
		<link href="assets/vendor/boxicons/css/boxicons.min.css" rel="stylesheet">
		<link href="assets/vendor/quill/quill.snow.css" rel="stylesheet">
		<link href="assets/vendor/quill/quill.bubble.css" rel="stylesheet">
		<link href="assets/vendor/remixicon/remixicon.css" rel="stylesheet">
		<link href="assets/vendor/simple-datatables/style.css" rel="stylesheet">
	  
		<!-- Template Main CSS File -->
		<link href="assets/css/style.css" rel="stylesheet">
	  
		<!-- =======================================================
		* Template Name: NiceAdmin
		* Updated: May 30 2023 with Bootstrap v5.3.0
		* Template URL: https://bootstrapmade.com/nice-admin-bootstrap-admin-html-template/
		* Author: BootstrapMade.com
		* License: https://bootstrapmade.com/license/
		======================================================== -->
	  </head>
	<body>
    
		<!-- ======= Header ======= -->
		<header id="header" class="header fixed-top d-flex align-items-center">

			<div class="d-flex align-items-center justify-content-between">
			  <i class="bi bi-list toggle-sidebar-btn" style="float: left; margin-right: 30px;"></i>
			  <a href="index.html" class="logo d-flex align-items-center">
				<img src="assets/img/logo.png" alt="">
				<span class="d-none d-lg-block">우리FISA</span>
			  </a>
			  
      
			 


			</div><!-- End Logo -->
		
			<div class="col-10">
			  <div class="container">
				<div class="row">
				  <div class="col-8">
            <div class="search-bar d-flex justify-content-start">
              <form class="search-form d-flex align-items-center" method="POST" action="#">
                  <input type="text" name="query" placeholder="종목을 검색하세요" title="Enter search keyword" class="form-control form-control-sm">
                  <button type="submit" title="Search"><i class="bi bi-search"></i></button>
              </form>
            </div><!-- End Search Bar -->
          </div>
				  <div class="col-4 text-end">
				</div>
			  </div>
        <div class="d-flex custom-button-group">
          <a href="login.html" class="btn btn-custom" style="height: 45px; margin-right: 10px; color: gray; font-size: 14px;">
            로그인
          </a>
          <a href="signup.html" class="btn btn" style="height: 45px; color: gray; font-size: 14px;">
              회원가입        
          </a>
        </div>
      </div>
        	
      </div>
      <style>
        .custom-button-group {
            display: flex;
            justify-content: flex-end;
            margin-top: -40px; /* 버튼을 위로 올리는 여백 조정 */
        }
      </style>

      
		</header><!-- End Header -->
		



  <!-- ======= Sidebar ======= -->
    <aside id="sidebar" class="sidebar">

      <ul class="sidebar-nav" id="sidebar-nav">

        <li class="nav-item">
          <a class="nav-link " href="dashboard.html">
            <i class="bi bi-grid"></i>
            <span>대시보드</span>
          </a>
        </li><!-- End Dashboard Nav -->

        <li class="nav-item">
          <a class="nav-link collapsed" data-bs-target="#components-nav" data-bs-toggle="collapse" href="#">
            <i class="bi bi-menu-button-wide"></i><span>종목</span><i class="bi bi-chevron-down ms-auto"></i>
          </a>
          <ul id="components-nav" class="nav-content collapse " data-bs-parent="#sidebar-nav">
            <li>
              <a href="item.html">
                <i class="bi bi-circle"></i><span>종목 상세페이지</span>
              </a>
            </li>
            <li>
              <a href="components-cards.html">
                <i class="bi bi-circle"></i><span>주식</span>
              </a>
            </li>


            <li>
              <a href="components-progress.html">
                <i class="bi bi-circle"></i><span>채권</span>
              </a>
            </li>

            <li>
              <a href="components-progress.html">
                <i class="bi bi-circle"></i><span>안전자산</span>
              </a>
            </li>
          </ul>
        </li><!-- End Components Nav -->


        <li class="nav-item">
          <a class="nav-link collapsed" data-bs-target="#tables-nav" data-bs-toggle="collapse" href="#">
            <i class="bi bi-layout-text-window-reverse"></i><span>상품비교함</span><i class="bi bi-chevron-down ms-auto"></i>
          </a>
          <ul id="tables-nav" class="nav-content collapse " data-bs-parent="#sidebar-nav">
            <li>
              <a href="tables-general.html">
                <i class="bi bi-circle"></i><span>첫번째 자산</span>
              </a>
            </li>
            <li>
              <a href="tables-data.html">
                <i class="bi bi-circle"></i><span>두번째 자산</span>
              </a>
            </li>
          </ul>
        </li><!-- End Tables Nav -->

        <li class="nav-item">
          <a class="nav-link collapsed" href="notice.html">
              <i class="bi bi-bar-chart"></i><span>공지사항</span>
          </a>
      </li>


      </ul>

  </aside><!-- End Sidebar-->
  <br />
  <br />
  <br />

  <main id="main" class="main">
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>차트 예제</title>
      <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    </head>
    <body>
      <div class="container">
        <div class="row">
          <h4>블랙</h4>
          <!-- 첫 번째 카드: 차트 1 -->
          <div class="col-lg-6">
            <div class="card">
              <div class="card-body">
                <h5 class="card-title">차트 1</h5>
      
                <!-- Pie Chart 1 -->
                <div id="pieChart1"></div>
                <script>
                  function createPieChart1() {
                    // 데이터 준비
                    const seriesData = [44, 55, 13, 43, 22,30,45,80,90,14,19,33,14];
                    const labels = ['us', 'uk', 'jp', 'euro', 'kor','ind','tw','br','kor3y','kor10y','us3y','us10y','gold'];
      
                    // 비중이 20% 미만인 항목을 필터링하여 새로운 항목 생성
                    const threshold = 5;
                    let filteredData = seriesData.filter((value, index) => {
                      return (value / seriesData.reduce((a, b) => a + b, 0)) * 100 >= threshold;
                    });
                    let filteredLabels = labels.filter((value, index) => {
                      return (seriesData[index] / seriesData.reduce((a, b) => a + b, 0)) * 100 >= threshold;
                    });
      
                    // 남은 항목들을 더해서 "기타" 항목 생성
                    let otherData = seriesData.filter((value, index) => {
                      return (value / seriesData.reduce((a, b) => a + b, 0)) * 100 < threshold;
                    });
                    let otherLabel = '기타';
      
                    if (otherData.length > 0) {
                      filteredData.push(otherData.reduce((a, b) => a + b, 0));
                      filteredLabels.push(otherLabel);
                    }
      
                    new ApexCharts(document.querySelector("#pieChart1"), {
                      series: filteredData,
                      chart: {
                        width: '100%', // 차트 너비를 100%로 설정하여 가로로 나열
                        height: 300, // 각 차트의 높이를 조절
                        type: 'pie',
                        show: true
                      },
                      labels: filteredLabels
                    }).render();
                  }
                  document.addEventListener("DOMContentLoaded", createPieChart1);
                </script>
                <!-- End Pie Chart 1 -->
              </div>
            </div>
          </div>
      
          <!-- 두 번째 카드: 차트 2 -->
          <div class="col-lg-6">
            <div class="card">
              <div class="card-body">
                <h5 class="card-title">차트 2</h5>
      
                <!-- Pie Chart 2 -->
                <div id="pieChart2"></div>
                <script>
                  function createPieChart2() {
                    // 데이터 준비
                    const seriesData = [10, 30, 25, 15, 20];
                    const labels = ['us', 'uk', 'jp', 'euro', 'kor','ind','tw','br','kor3y','kor10y','us3y','us10y','gold'];
      
                    // 비중이 20% 미만인 항목을 필터링하여 새로운 항목 생성
                    const threshold = 20;
                    let filteredData = seriesData.filter((value, index) => {
                      return (value / seriesData.reduce((a, b) => a + b, 0)) * 100 >= threshold;
                    });
                    let filteredLabels = labels.filter((value, index) => {
                      return (seriesData[index] / seriesData.reduce((a, b) => a + b, 0)) * 100 >= threshold;
                    });
      
                    // 남은 항목들을 더해서 "기타" 항목 생성
                    let otherData = seriesData.filter((value, index) => {
                      return (value / seriesData.reduce((a, b) => a + b, 0)) * 100 < threshold;
                    });
                    let otherLabel = '기타';
      
                    if (otherData.length > 0) {
                      filteredData.push(otherData.reduce((a, b) => a + b, 0));
                      filteredLabels.push(otherLabel);
                    }
      
                    new ApexCharts(document.querySelector("#pieChart2"), {
                      series: filteredData,
                      chart: {
                        width: '100%', // 차트 너비를 100%로 설정하여 가로로 나열
                        height: 300, // 각 차트의 높이를 조절
                        type: 'pie',
                        show: true
                      },
                      labels: filteredLabels
                    }).render();
                  }
                  document.addEventListener("DOMContentLoaded", createPieChart2);
                </script>
                <!-- End Pie Chart 2 -->
              </div>
            </div>
          </div>
        </div>
      
        <!-- 세 번째 카드: 차트 3 -->
        <div class="row">
          <h4>블랙알파</h4>
          <div class="col-lg-6">
            <div class="card">
              <div class="card-body">
                <h5 class="card-title">차트 3</h5>
      
                <!-- Pie Chart 3 -->
                <div id="pieChart3"></div>
                <script>
                  function createPieChart3() {
                    // 데이터 준비
                    const seriesData = [30, 20, 40, 10, 50];
                    const labels = ['us', 'uk', 'jp', 'euro', 'kor','ind','tw','br','kor3y','kor10y','us3y','us10y','gold'];
      
                    // 비중이 20% 미만인 항목을 필터링하여 새로운 항목 생성
                    const threshold = 20;
                    let filteredData = seriesData.filter((value, index) => {
                      return (value / seriesData.reduce((a, b) => a + b, 0)) * 100 >= threshold;
                    });
                    let filteredLabels = labels.filter((value, index) => {
                      return (seriesData[index] / seriesData.reduce((a, b) => a + b, 0)) * 100 >= threshold;
                    });
      
                    // 남은 항목들을 더해서 "기타" 항목 생성
                    let otherData = seriesData.filter((value, index) => {
                      return (value / seriesData.reduce((a, b) => a + b, 0)) * 100 < threshold;
                    });
                    let otherLabel = '기타';
      
                    if (otherData.length > 0) {
                      filteredData.push(otherData.reduce((a, b) => a + b, 0));
                      filteredLabels.push(otherLabel);
                    }
      
                    new ApexCharts(document.querySelector("#pieChart3"), {
                      series: filteredData,
                      chart: {
                        width: '100%', // 차트 너비를 100%로 설정하여 가로로 나열
                        height: 300, // 각 차트의 높이를 조절
                        type: 'pie',
                        show: true
                      },
                      labels: filteredLabels
                    }).render();
                  }
                  document.addEventListener("DOMContentLoaded", createPieChart3);
                </script>
                <!-- End Pie Chart 3 -->
              </div>
            </div>
          </div>
      
          <!-- 네 번째 카드: 차트 4 -->
          <div class="col-lg-6">
            <div class="card">
              <div class="card-body">
                <h5 class="card-title">차트 4</h5>
      
                <!-- Pie Chart 4 -->
                <div id="pieChart4"></div>
                <script>
                  function createPieChart4() {
                    // 데이터 준비
                    const seriesData = [44, 55, 13, 43, 22];
                    const labels = ['us', 'uk', 'jp', 'euro', 'kor','ind','tw','br','kor3y','kor10y','us3y','us10y','gold'];
      
                    // 비중이 20% 미만인 항목을 필터링하여 새로운 항목 생성
                    const threshold = 20;
                    let filteredData = seriesData.filter((value, index) => {
                      return (value / seriesData.reduce((a, b) => a + b, 0)) * 100 >= threshold;
                    });
                    let filteredLabels = labels.filter((value, index) => {
                      return (seriesData[index] / seriesData.reduce((a, b) => a + b, 0)) * 100 >= threshold;
                    });
      
                    // 남은 항목들을 더해서 "기타" 항목 생성
                    let otherData = seriesData.filter((value, index) => {
                      return (value / seriesData.reduce((a, b) => a + b, 0)) * 100 < threshold;
                    });
                    let otherLabel = '기타';
      
                    if (otherData.length > 0) {
                      filteredData.push(otherData.reduce((a, b) => a + b, 0));
                      filteredLabels.push(otherLabel);
                    }
      
                    new ApexCharts(document.querySelector("#pieChart4"), {
                      series: filteredData,
                      chart: {
                        width: '100%', // 차트 너비를 100%로 설정하여 가로로 나열
                        height: 300, // 각 차트의 높이를 조절
                        type: 'pie',
                        show: true
                      },
                      labels: filteredLabels
                    }).render();
                  }
                  document.addEventListener("DOMContentLoaded", createPieChart4);
                </script>
                <!-- End Pie Chart 4 -->
              </div>
            </div>
          </div>
      
          <!-- 다섯 번째 카드: 차트 5 -->
          <h4>나눌</h4>
          <div class="col-lg-6">
            <div class="card">
              <div class="card-body">
                <h5 class="card-title">차트 5</h5>
      
                <!-- Pie Chart 5 -->
                <div id="pieChart5"></div>
                <script>
                  function createPieChart5() {
                    // 데이터 준비
                    const seriesData = [10, 30, 25, 15, 20];
                    const labels = ['us', 'uk', 'jp', 'euro', 'kor','ind','tw','br','kor3y','kor10y','us3y','us10y','gold'];
      
                    // 비중이 20% 미만인 항목을 필터링하여 새로운 항목 생성
                    const threshold = 20;
                    let filteredData = seriesData.filter((value, index) => {
                      return (value / seriesData.reduce((a, b) => a + b, 0)) * 100 >= threshold;
                    });
                    let filteredLabels = labels.filter((value, index) => {
                      return (seriesData[index] / seriesData.reduce((a, b) => a + b, 0)) * 100 >= threshold;
                    });
      
                    // 남은 항목들을 더해서 "기타" 항목 생성
                    let otherData = seriesData.filter((value, index) => {
                      return (value / seriesData.reduce((a, b) => a + b, 0)) * 100 < threshold;
                    });
                    let otherLabel = '기타';
      
                    if (otherData.length > 0) {
                      filteredData.push(otherData.reduce((a, b) => a + b, 0));
                      filteredLabels.push(otherLabel);
                    }
      
                    new ApexCharts(document.querySelector("#pieChart5"), {
                      series: filteredData,
                      chart: {
                        width: '100%', // 차트 너비를 100%로 설정하여 가로로 나열
                        height: 300, // 각 차트의 높이를 조절
                        type: 'pie',
                        show: true
                      },
                      labels: filteredLabels
                    }).render();
                  }
                  document.addEventListener("DOMContentLoaded", createPieChart5);
                </script>
                <!-- End Pie Chart 5 -->
              </div>
            </div>
          </div>
      
          <!-- 여섯 번째 카드: 차트 6 -->
          <div class="col-lg-6">
            <div class="card">
              <div class="card-body">
                <h5 class="card-title">차트 6</h5>
      
                <!-- Pie Chart 6 -->
                <div id="pieChart6"></div>
                <script>
                  function createPieChart6() {
                    // 데이터 준비
                    const seriesData = [60, 15, 10, 5, 20];
                    const labels = ['us', 'uk', 'jp', 'euro', 'kor','ind','tw','br','kor3y','kor10y','us3y','us10y','gold'];
      
                    // 비중이 20% 미만인 항목을 필터링하여 새로운 항목 생성
                    const threshold = 20;
                    let filteredData = seriesData.filter((value, index) => {
                      return (value / seriesData.reduce((a, b) => a + b, 0)) * 100 >= threshold;
                    });
                    let filteredLabels = labels.filter((value, index) => {
                      return (seriesData[index] / seriesData.reduce((a, b) => a + b, 0)) * 100 >= threshold;
                    });
      
                    // 남은 항목들을 더해서 "기타" 항목 생성
                    let otherData = seriesData.filter((value, index) => {
                      return (value / seriesData.reduce((a, b) => a + b, 0)) * 100 < threshold;
                    });
                    let otherLabel = '기타';
      
                    if (otherData.length > 0) {
                      filteredData.push(otherData.reduce((a, b) => a + b, 0));
                      filteredLabels.push(otherLabel);
                    }
      
                    new ApexCharts(document.querySelector("#pieChart6"), {
                      series: filteredData,
                      chart: {
                        width: '100%', // 차트 너비를 100%로 설정하여 가로로 나열
                        height: 300, // 각 차트의 높이를 조절
                        type: 'pie',
                        show: true
                      },
                      labels: filteredLabels
                    }).render();
                  }
                  document.addEventListener("DOMContentLoaded", createPieChart6);
                </script>
                <!-- End Pie Chart 6 -->
              </div>
            </div>
          </div>
        </div>
      </div>
    </body>
    </html>
    
  </main><!-- End #main -->
    	<!-- ======= Footer ======= -->
	<footer class="footer">
		<div class="copyright">
			&copy; Copyright <strong><span>NiceAdmin</span></strong>. All Rights Reserved
		</div>
		<div class="credits">
			<!-- All the links in the footer should remain intact. -->
			<!-- You can delete the links only if you purchased the pro version. -->
			<!-- Licensing information: https://bootstrapmade.com/license/ -->
			<!-- Purchase the pro version with working PHP/AJAX contact form: https://bootstrapmade.com/nice-admin-bootstrap-admin-html-template/ -->
			Designed by <a href="https://bootstrapmade.com/">BootstrapMade</a>
		</div>
  </footer>
	<!-- End Footer -->
  <!-- Vendor JS Files -->
  <script src="assets/vendor/apexcharts/apexcharts.min.js"></script>
  <script src="assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
  <script src="assets/vendor/chart.js/chart.umd.js"></script>
  <script src="assets/vendor/echarts/echarts.min.js"></script>
  <script src="assets/vendor/quill/quill.min.js"></script>
  <script src="assets/vendor/simple-datatables/simple-datatables.js"></script>
  <script src="assets/vendor/tinymce/tinymce.min.js"></script>
  <script src="assets/vendor/php-email-form/validate.js"></script>

  <!-- Template Main JS File -->
  <script src="assets/js/main.js"></script>
  <script
  src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
  integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm"
  crossorigin="anonymous"></script>

	</body>

	<script
		src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
		integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm"
		crossorigin="anonymous"
	></script>
</html>
